<button data-drawer-target="sidebar-multi-level-sidebar" data-drawer-toggle="sidebar-multi-level-sidebar" aria-controls="sidebar-multi-level-sidebar" type="button" class="inline-flex items-center p-2 mt-2 ml-3 text-sm text-gray-500 rounded-lg lg:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600">
    <span class="sr-only">Open sidebar</span>
    <svg class="w-6 h-6" aria-hidden="true" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path clip-rule="evenodd" fill-rule="evenodd" d="M2 4.75A.75.75 0 012.75 4h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 4.75zm0 10.5a.75.75 0 01.75-.75h7.5a.75.75 0 010 1.5h-7.5a.75.75 0 01-.75-.75zM2 10a.75.75 0 01.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 10z"></path></svg>
</button>

<aside id="sidebar-multi-level-sidebar" class="fixed top-0 left-0 z-40 w-64 h-screen transition-transform -translate-x-full lg:translate-x-0" aria-label="Sidebar">
    <div class="h-full px-3 py-4 overflow-y-auto bg-white dark:bg-gray-800 flex flex-col justify-between">
        <ul class="space-y-2 font-medium" id="sidebarContent">
            {{#each apps}}
                <li>
                    <button type="button" class="flex items-center w-full p-2 text-gray-900 transition duration-75 rounded-lg group hover:bg-gray-100 dark:text-white dark:hover:bg-gray-700" aria-controls="dropdown-{{@key}}" data-collapse-toggle="dropdown-{{@key}}">
                        <i class="{{lookup ../categorieIcons @key}}"></i>
                        <span class="flex-1 ml-3 text-left whitespace-nowrap">{{@key}}</span>
                        <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
                    </button>
                    <ul id="dropdown-{{@key}}" class="hidden py-2 space-y-2">
                        {{#each this}}
                            {{#if (isMenuPartial this.urlName ../../appName)}}
                                <li><a href="/app/{{this.urlName}}" class="items-center w-full p-2 text-gray-900 transition duration-75 pl-11 group hover:bg-gray-100 dark:text-white dark:hover:bg-gray-700 flex gap-2 flex-row border-b-2 border-gary-400"><i class="{{this.iconName}}"></i> <span>{{this.name}}</span></a></li>
                            {{else}}
                                <li><a href="/app/{{this.urlName}}" class="items-center w-full p-2 text-gray-900 transition duration-75 pl-11 group hover:bg-gray-100 dark:text-white dark:hover:bg-gray-700 flex gap-2 flex-row"><i class="{{this.iconName}}"></i> <span>{{this.name}}</span></a></li>
                            {{/if}}
                        {{/each}}
                    </ul>
                </li>
            {{/each}}
        </ul>
        <label class="relative inline-flex items-center cursor-pointer">
            <input type="checkbox" value="" class="sr-only peer" id="darkThemeToggleButton">
            <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-indigo-300 dark:peer-focus:ring-indigo-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-indigo-600"></div>
            <span class="ml-3 text-sm font-medium text-gray-900 dark:text-gray-300">Dark theme</span>
        </label>
    </div>
</aside>

<main class="lg:ml-64 ml-0 p-4">
    {{> (whichPartial) }}
</main>

<script>
    const darkThemeToggleButton = document.querySelector("#darkThemeToggleButton");

    if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
        document.documentElement.classList.add('dark');
        darkThemeToggleButton.checked = true;
    } else {
        document.documentElement.classList.remove('dark');
    }

    darkThemeToggleButton.addEventListener("change", (e) => {
        if(darkThemeToggleButton.checked){
            document.documentElement.classList.add('dark');
            localStorage.setItem('color-theme', 'dark');
        }else{
            document.documentElement.classList.remove('dark')
            localStorage.setItem('color-theme', 'light');
        }
    });
</script>