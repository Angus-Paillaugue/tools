<div class="card max-w-2xl mx-auto">
    <h1>Image to base64</h1>

    <div class="flex items-center justify-center w-full mt-4" id="fileDragZone">
        <label for="imageInput" class="flex flex-col items-center justify-center w-full h-44 border-2 border-gray-300 border-dashed rounded-lg cursor-pointer bg-gray-50 dark:hover:bg-bray-800 dark:bg-gray-700 hover:bg-gray-100 dark:border-gray-600 dark:hover:border-gray-500 dark:hover:bg-gray-600">
            <div class="flex flex-col items-center justify-center pt-5 pb-6">
                <svg aria-hidden="true" class="w-10 h-10 mb-3 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path></svg>
                <p class="mb-2 text-sm text-gray-500 dark:text-gray-400"><span class="font-semibold">Click to upload</span> or drag and drop</p>
                <p class="text-xs text-gray-500 dark:text-gray-400">PNG, JPG</p>
            </div>
            <input id="imageInput" type="file" class="hidden" accept="image/*"/>
        </label>
    </div> 

    <textarea rows="15" class="block rounded-t-lg px-2.5 py-2.5 w-full text-sm text-gray-900 bg-gray-50 dark:bg-gray-700 border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-indigo-500 focus:outline-none focus:ring-0 focus:border-indigo-600 mt-4 overflow-x-auto" placeholder="Result" autocomplete="off" id="resultContent" readonly></textarea>

</div>

<script src="https://unpkg.com/color.js@1.2.0/dist/color.js"></script>
<script type="module">
    const imageInput = document.querySelector("#imageInput");
    const dropZoneElement = document.getElementById("fileDragZone");
    const resultContentTextarea = document.querySelector("#resultContent");

    imageInput.addEventListener("change", (e) => {
        if (imageInput.files.length) end(imageInput.files[0]);
    });
    dropZoneElement.addEventListener("dragover", (e) => {
        e.preventDefault();
    });
    dropZoneElement.addEventListener("drop", (e) => {
        e.preventDefault();
        if (e.dataTransfer.files.length) {
            imageInput.files = e.dataTransfer.files;
            end(e.dataTransfer.files[0]);
        }
    });
    function end(file) {
        if (file.type.startsWith("image/")) {
            const reader = new FileReader();
            reader.readAsDataURL(file);
            reader.onload = () => {
                resultContentTextarea.value = reader.result;
            };
        }
    }
</script>